"""
Django settings for memorify_project project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import mongoengine

BASE_DIR = Path(__file__).resolve().parent.parent

""" Import your own settings here """
try:
    from memorify_project import m_settings
except ImportError:
    m_settings = {}

MONGODB_HOST = m_settings.get('MONGODB_HOST', os.environ.get('MONGODB_HOST', 'mongodb://localhost:27017/'))
MONGO_DB = m_settings.get('MONGO_DB', os.environ.get('MONGO_DB', 'memorify'))
MONGO_USER = m_settings.get('MONGO_USER', os.environ.get('MONGO_USER', None))
MONGO_PASSWORD = m_settings.get('MONGO_PASSWORD', os.environ.get('MONGO_PASSWORD', None))
try:
    print("success")
    DEFAULT_DB_CONNECTION = mongoengine.connect(
        MONGO_DB,
        host=MONGODB_HOST,
        username=MONGO_USER,
        password=MONGO_PASSWORD,
        alias='default')

except ConnectionError:
    print("error")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6s1z%2!3lj252tal&n0ujud#j)iqx&4x5glnd88kxxll9*lw3i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'memorify_app.apps.MemorifyAppConfig',
    'account.apps.AccountConfig',
    'comment.apps.CommentConfig',
    'common.apps.CommonConfig',
    'gdpr.apps.GdprConfig',
    'message.apps.MessageConfig',
    'register.apps.RegisterConfig',
    'shop.apps.ShopConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'memorify_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'memorify_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

FLAGS_URL = '/images/flags_rounded_small/'
PROFILE_PICTURES_URL = '/images/profile_pictures/'
MEDIA_ROOT_FLAGS = os.path.join(BASE_DIR, "images/flags_rounded_small/")
MEDIA_ROOT_PP = os.path.join(BASE_DIR, "images/profile_pictures/")
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

FCM_DJANGO_SETTINGS = {
    "APP_VERBOSE_NAME": "firebasetest_django",
    # default: _('FCM Django')
    "FCM_SERVER_KEY": "AAAAH8mdaxM:APA91bGwzaNxn8nUCMQOB0qZzuaEL-JCkSmw-"
                      "jQBphyQBrRSbE3oISaOHPWMuaYL0edKAiiO1uiv6kVR0JhSnmgFW-"
                      "3aqtJV3RQLgb_mlKOisTmslTjvZphbTgRADGrjP78y3CavxDEr",
    # true if you want to have only one active device per registered user at a time
    # default: False
    "ONE_DEVICE_PER_USER": True,
    # devices to which notifications cannot be sent,
    # are deleted upon receiving error response from FCM
    # default: False
    "DELETE_INACTIVE_DEVICES": True
}

GOOGLE_OAUTH2_CLIENT_SECRETS_JSON = "clients_secret.json"
